#!/bin/bash

TESTING=true

ROOT_DIR="$(cd "$(dirname "$0")"; pwd)"


do_status() {
	iptables -vL
	echo
	ip6tables -vL
}


do_clear() {
	# Reinitialisation des tables
	iptables -P   INPUT ACCEPT
	iptables -P  OUTPUT ACCEPT
	iptables -P FORWARD ACCEPT
	iptables -F
	iptables -X

	ip6tables -P   INPUT ACCEPT
	ip6tables -P  OUTPUT ACCEPT
	ip6tables -P FORWARD ACCEPT
	ip6tables -F
	ip6tables -X

	service fail2ban restart
	service docker   restart
	until iptables -L | grep -q fail2ban; do sleep 1; done
	until iptables -L | grep -q DOCKER;   do sleep 1; done
}


do_start() {

	# IPv6
	###############################################################################
	ip6tables -P INPUT   DROP
	ip6tables -P OUTPUT  DROP
	ip6tables -P FORWARD DROP


	# INPUT
	###############################################################################

	# Libere le trafic local
	iptables -I INPUT 1 -i lo -j ACCEPT

	# Connexions deja etablies
	#iptables -A INPUT -m conntrack --ctstate ESTABLISHED -j ACCEPT

	# Blacklist
	iptables -I INPUT 2 -m set --match-set blacklist src,dst -j DROP

	# Suppression des paquets broadcast et multicast
	iptables -I INPUT 3 -m pkttype --pkt-type broadcast -j DROP
	iptables -I INPUT 4 -m pkttype --pkt-type multicast -j DROP

	iptables -N TCP_IN
	iptables -A INPUT -p tcp -j TCP_IN
	iptables -A INPUT -p udp --sport 53 -j ACCEPT # DNS sortant

#	iptables -A INPUT -j LOG --log-prefix " IN: " --log-level 4
	iptables -P INPUT DROP


	# OUTPUT
	###############################################################################

	# Libere le trafic local
	iptables -A OUTPUT -o lo -j ACCEPT

	# Blacklist
	iptables -A OUTPUT -m set --match-set blacklist src,dst -j DROP

	# Connexions deja etablies
	iptables -A OUTPUT -m conntrack --ctstate ESTABLISHED -j ACCEPT

	iptables -N TCP_OUT
	iptables -A OUTPUT -p tcp -j TCP_OUT
	iptables -A OUTPUT -p udp --dport 53 -j ACCEPT # DNS sortant
	iptables -A OUTPUT -p udp --source 149.202.56.159 --destination 149.202.56.1 --sport 68 --dport 67 -j ACCEPT

#	iptables -A OUTPUT -j LOG --log-prefix "OUT: " --log-level 4
	iptables -P OUTPUT DROP


	# FORWARD
	###############################################################################

	# Blacklist
	iptables -I FORWARD 1 -m set --match-set blacklist src,dst -j DROP

	iptables -A FORWARD -j LOG --log-prefix "FWD: " --log-level 4
	iptables -P FORWARD DROP


	# Securite
	###############################################################################

	# Scans XMAS et NULL
	iptables -A TCP_IN -p tcp --tcp-flags FIN,URG,PSH FIN,URG,PSH -j DROP
	iptables -A TCP_IN -p tcp --tcp-flags ALL ALL                 -j DROP
	iptables -A TCP_IN -p tcp --tcp-flags ALL NONE                -j DROP
	iptables -A TCP_IN -p tcp --tcp-flags SYN,RST SYN,RST         -j DROP


	# SSH entrant
	###############################################################################
	ipset create ssh-443 -exist hash:net family inet hashsize 16384 maxelem 65536; ipset flush ssh-443
	ipset create ssh-22  -exist hash:net family inet hashsize 16384 maxelem 65536; ipset flush ssh-22
	for host in trusted1 trusted2 trusted3; do
		ipset add ssh-443 $host
	done
	for host in trusted4 trusted5; do
		ipset add ssh-22 $host
	done

	iptables -A TCP_IN -i eth0 -p tcp --dport 443 -m set --match-set ssh-443 src -j ACCEPT
	iptables -A TCP_IN -i eth0 -p tcp --dport  22 -m set --match-set ssh-22  src -j ACCEPT


	# ICMP
	###############################################################################
	ipset create icmp -exist hash:net family inet hashsize 16384 maxelem 65536; ipset flush icmp

	# Ping OVH
	for source in 92.222.184.0/24 92.222.185.0/24 92.222.186.0/24 167.114.37.0/24 149.202.34.1/32; do
		ipset add icmp $source
	done

	iptables -A INPUT  -p icmp -m set --match-set icmp src -j ACCEPT
	iptables -A OUTPUT -p icmp -m set --match-set icmp dst -j ACCEPT


	# TCP sortant
	###############################################################################

	# HTTP et HTTPS sortant
	iptables -A TCP_OUT -p tcp --dport  80 -j ACCEPT
	iptables -A TCP_IN  -p tcp --sport  80 -j ACCEPT
	iptables -A TCP_OUT -p tcp --dport 443 -j ACCEPT
	iptables -A TCP_IN  -p tcp --sport 443 -j ACCEPT

	# SMTP sortant
	iptables -A TCP_OUT -p tcp --dport 25 -j ACCEPT
	iptables -A TCP_IN  -p tcp --sport 25 -j ACCEPT

	# Whois sortant
	iptables -A TCP_OUT -p tcp --dport 43 -j ACCEPT
	iptables -A TCP_IN  -p tcp --sport 43 -j ACCEPT
}


do_blacklist_update() {
	ipset create blacklist-tmp -exist hash:net family inet hashsize 16384 maxelem 65536

	{	sed 's/#.*//g;/^$/d' "$ROOT_DIR/blacklist.sources" | while read src; do
			wget -O- -o/dev/null "$src" | grep -Po '(?:\d{1,3}\.){3}\d{1,3}(?:/\d{1,2})?' | sed 's/#.*//g;/^$/d' | sed -r -e '/^(10\.|127\.|172\.16\.|192\.168\.)/d'
		done
		sed 's/#.*//g;/^$/d' "$ROOT_DIR/blacklist"
	} | sort -u | while read ipaddr; do
		ipset add blacklist-tmp $ipaddr
	done

	ipset create blacklist -exist hash:net family inet hashsize 16384 maxelem 65536
	ipset swap   blacklist blacklist-tmp
	ipset destroy blacklist-tmp
}


do_blacklist_add() {
	for IP in $@; do
		ipset list blacklist | grep -q $IP || ipset add blacklist $IP
		grep -q $IP "$ROOT_DIR/blacklist"  || echo $IP >>"$ROOT_DIR/blacklist"
	done
}


###############################################################################
# Main
###############################################################################


[ "$1" == 'blupd' ] && {
	do_blacklist_update
	exit 0
}

[ "$1" == 'bladd' ] && {
	shift
	do_blacklist_add $@
	exit 0
}


[ "$1" == 'status' ] && {
	do_status
	exit 0
}


do_clear


[ "$1" == 'start' ] && {
	do_start

	$TESTING || exit 0

	do_status
	echo
	echo "La configuration sera annulée dans 60 secondes."
	echo "Appuyer sur CTRL-C pour l'appliquer définitivement..."

	sleep 60
	do_clear
}

