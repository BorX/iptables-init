#!/usr/bin/env bash

readonly ROOT_DIR="$(cd "$(dirname "$0")"; pwd)"
readonly PROFILES_DIR="$ROOT_DIR/profiles"
readonly MODULES_DIR="$ROOT_DIR/modules"
PATH=/sbin:$PATH


###############################################################################
# Libs

isIpsetInstalled() {
	which ipset &>/dev/null
}


moduleHelper_apply() {
	local moduleFile="$1"
	local moduleAction="$2"

	applyModule()   { true; }
	enableModule()  { applyModule --append; }
	disableModule() { applyModule --delete; }
	source $moduleFile
	[ "$moduleAction" ==  'enmod' ] && enableModule
	[ "$moduleAction" == 'dismod' ] && disableModule
	unset applyModule enableModule disableModule
}


moduleHelper_enable() {
	local moduleFile="$1"
	moduleHelper_apply "$moduleFile" 'enmod'
}


moduleHelper_disable() {
	local moduleFile="$1"
	moduleHelper_apply "$moduleFile" 'dismod'
}


iptablesInit_splitTcpUdp() {
	xargs -n1 iptables -N <<<'TCP_IN TCP_OUT UDP_IN UDP_OUT'

	# TCP
	iptables -m comment --comment "Split TCP   " -A  INPUT -p tcp -j TCP_IN
	iptables -m comment --comment "Split TCP   " -A OUTPUT -p tcp -j TCP_OUT

	# UDP
	iptables -m comment --comment "Split UDP   " -A  INPUT -p udp -j UDP_IN
	iptables -m comment --comment "Split UDP   " -A OUTPUT -p udp -j UDP_OUT
}


do_save() {
	local saveDir="$ROOT_DIR/save-$(date +%Y%m%d-%H%M%S)"
	mkdir -p "$saveDir"
	ipset    save >"$saveDir/ipset"
	iptables-save >"$saveDir/iptables"
	ln -s "$saveDir" "$ROOT_DIR/save-previous"
}


do_restore() {
	local restoreDir="$ROOT_DIR/save-previous"
	ipset    restore <"$restoreDir/ipset"
	iptables-restore <"$restoreDir/iptables"
}


do_monitor() {
	iptables -Z
	local begin="$(date +%s)"
	while sleep 60; do
		clear
		printf 'Depuis '; date -d "@$(($(date +%s) - $begin))" --utc '+%H:%M'
		iptables -nvL
	done
}


usage() {
	local rc="$1"
	[ -z "$rc" ] && local rc=0
	[ $rc -gt 0 ] && exec >&2
	cat <<EOF
usages:
$0 clear
$0 start
$0 status
$0 zero
$0 [ -f | --file ConfFile ] [ -q | --quiet ] [ --network-interface iface ] [ --trusted-list '@ip [ ... ]' ] [ --trusted-icmp '@ip [ ... ]' ] profile profileName
$0 modules
$0 [ -f | --file ConfFile ] [ -q | --quiet ] [ --network-interface iface ] [ --trusted-list '@ip [ ... ]' ] [ --trusted-icmp '@ip [ ... ]' ]  enmod | dismod  moduleName [ ... ]
$0 [ -h | --help ]
EOF
	exit $rc
}


###############################################################################
# Options

# Settings passed in command line  >  Config file passed in command line  >  Default config file  >  Default options

# Default options
QUIET=false
NTWK_INTFCE=eth0
TRUSTED_LST=''
TRUSTED_ICMP=''

# Default config file > Default options
[ -r '/etc/default/iptables-init' ] && source '/etc/default/iptables-init'

TEMP="$(getopt --quiet --options hqf: --longoptions help,quiet,file:,network-interface:,trusted-list:,trusted-icmp: -- "$@")"
[ $? == 0 ] || usage 1

# Config file passed in command line > Default config file
eval set -- "$TEMP"
while true; do
	case "$1" in
		-f | --file)
			[ -r "$2" ] || { echo >&2 "$2 n'est pas lisible"; exit 2; }
			source "$2"
			shift 2
			;;
		--) shift ; break  ;;
		*)  shift          ;;
	esac
done

# Settings passed in command line > Config files
eval set -- "$TEMP"
while true; do
	case "$1" in
		-f | --file)                             shift 2 ;;
		--network-interface) NTWK_INTFCE="$2"  ; shift 2 ;;
		--trusted-list)      TRUSTED_LST="$2"  ; shift 2 ;;
		--trusted-icmp)      TRUSTED_ICMP="$2" ; shift 2 ;;
		-q | --quiet)        QUIET=true        ; shift   ;;
		--) shift ; break    ;;
		-h | --help) usage   ;;
		*)           usage 1 ;;
	esac
done


###############################################################################
# Args

do_list_modules() {
	local rc="$1"
	ls -1 "$ROOT_DIR/modules"
	[ -z "$rc" ] && exit 0 || exit $rc
}

do_load_modules() {
	local action="$1"
	shift
	for module in $@; do
		local moduleFile="$ROOT_DIR/modules/$module"
		[ -f "$moduleFile" ] || do_list_modules 1

		[ "$action" ==  'enmod' ] && iptablesInit_enableModule
		[ "$action" == 'dismod' ] && iptablesInit_disableModule
	done
}

case "$1" in
	clear|start|status|zero) $0 profile $1 ;;
	profile)      [ -f "$PROFILES_DIR/$2.sh" ] || usage 1
                source "$PROFILES_DIR/$2.sh" ;;
	enmod|dismod) do_load_modules "$@" ;;
	modules)      do_list_modules      ;;
	*)            usage 1              ;;
esac

