#!/usr/bin/env bash

ROOT_DIR="$(cd "$(dirname "$0")"; pwd)"
PATH=/sbin:$PATH


isIpsetInstalled() {
	which ipset &>/dev/null
}


do_monitor() {
	iptables -Z
	local begin="$(date +%s)"
	while sleep 60; do
		clear
		printf 'Depuis '; date -d "@$(($(date +%s) - $begin))" --utc '+%H:%M'
		iptables -nvL
	done
}


usage() {
	cat <<EOF
usages:
$0 status
$0 profiles
$0 [ -f | --file ConfFile ] [ -q | --quiet ] [ --network-interface iface ] [ --trusted-list '@ip [ ... ]' ] [ --trusted-icmp '@ip [ ... ]' ] profile profilename
$0 rules
$0 [ -f | --file ConfFile ] [ -q | --quiet ] [ --network-interface iface ] [ --trusted-list '@ip [ ... ]' ] [ --trusted-icmp '@ip [ ... ]' ]  add | del  rule [ ... ]
$0 [ -h | --help ]
EOF
}


###############################################################################
# Options

# Settings passed in command line  >  Config file passed in command line  >  Default config file  >  Default options

# Default options
QUIET=false
NTWK_INTFCE=eth0
TRUSTED_LST=''
TRUSTED_ICMP=''

# Default config file > Default options
[ -r '/etc/default/iptables-init' ] && source '/etc/default/iptables-init'

TEMP="$(getopt --quiet --options hqf: --longoptions help,quiet,file:,network-interface:,trusted-list:,trusted-icmp: -- "$@")"
[ $? == 0 ] || { usage >&2; exit 1; }

# Config file passed in command line > Default config file
eval set -- "$TEMP"
while true; do
	case "$1" in
		-f | --file)
			[ -r "$2" ] || { echo >&2 "$2 n'est pas lisible"; exit 2; }
			source "$2"
			shift 2
			;;
		--) shift ; break  ;;
		*)  shift          ;;
	esac
done

# Settings passed in command line > Config files
eval set -- "$TEMP"
while true; do
	case "$1" in
		-f | --file)                             shift 2 ;;
		--network-interface) NTWK_INTFCE="$2"  ; shift 2 ;;
		--trusted-list)      TRUSTED_LST="$2"  ; shift 2 ;;
		--trusted-icmp)      TRUSTED_ICMP="$2" ; shift 2 ;;
		-q | --quiet)        QUIET=true        ; shift   ;;
		--) shift ; break  ;;
		-h | --help) usage     ; exit 0 ;;
		*)           usage >&2 ; exit 1 ;;
	esac
done


###############################################################################
# Args : list, rule or profile

do_list_profiles() {
	local rc="$1"
	find "$ROOT_DIR/profiles" -follow | sort | sed "s,$ROOT_DIR/profiles,,;/^$/d;s,[^/]*/,|   ,g;s,| *\([^| ]\),+- \1,"
	[ -z "$rc" ] && exit 0 || exit $rc
}

do_list_rules() {
	local rc="$1"
	ls -1 "$ROOT_DIR/rules"
	[ -z "$rc" ] && exit 0 || exit $rc
}

do_load_rule() {
	local action="$1"
	[ "$action" == 'add' ] && local actFlg='-A'
	[ "$action" == 'del' ] && local actFlg='-D'

	shift
	for rule in $@; do
		local ruleFile="$ROOT_DIR/rules/$rule"
		[ -f "$ruleFile" ] || do_list_rules 1

		source "$ruleFile"
	done
}

do_load_profile() {
	local profileDir="$1"

	[ -d "$profileDir" ] || do_list_profiles 1
	for addons in "$profileDir"/*; do
		if [ -f "$addons" ]; then
			source "$addons"
		else
			do_load_profile "$addons"
		fi
	done
}

case "$1" in
	add|del) do_load_rule "$@" ;;
	profile)  [ -n "$2" ] || { usage >&2 ; exit 1 ; }
            do_load_profile "$ROOT_DIR/profiles/$2"     ;;
	status)   do_load_profile "$ROOT_DIR/profiles/status" ;;
	zero)     do_load_profile "$ROOT_DIR/profiles/zero"   ;;
	profiles) do_list_profiles ;;
	rules)    do_list_rules    ;;
	*)        usage >&2 ; exit 1 ;;
esac

