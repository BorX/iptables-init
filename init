#!/usr/bin/env bash

readonly ROOT_DIR="$(cd "$(dirname "$0")"; pwd)"
readonly PROFILES_DIR="$ROOT_DIR/profiles"
readonly MODULES_DIR="$ROOT_DIR/modules"
PATH=/sbin:$PATH


###############################################################################
# Libs
###############################################################################

isIpsetInstalled() {
	which ipset &>/dev/null
}


###############################################################################
# Profile Helpers

loadProfile() {
	local profileName="$1"
	local profileFile="$PROFILES_DIR/$profileName.sh"

	[ -f "$profileFile" ] || usage 1
	source "$profileFile"
}


###############################################################################
# Module Helpers

# Default functions for modules ; may be overrided
apply()   { true; }
enable()  { apply --append; }
disable() { apply --delete; }


moduleHelper() {
	local action="$1"
	local moduleName="$2"

	local moduleFile="$MODULES_DIR/$moduleName"
	[ -f "$moduleFile" ] || do_list_modules 1

	( # May override functions
		source "$moduleFile"
		$action
	)
}


enmod() {
	local moduleName="$1"
	moduleHelper enable "$moduleName"
}


dismod() {
	local moduleName="$1"
	moduleHelper disable "$moduleName"
}


###############################################################################
# Actions

do_list_modules() {
	local rc="$1"
	ls -1 "$MODULES_DIR"
	[ -z "$rc" ] && exit 0 || exit $rc
}


do_load_modules() {
	local action="$1"
	shift
	for moduleName in $@; do
		$action "$moduleName"
	done
}


usage() {
	local rc="$1"
	[ -z "$rc" ] && local rc=0
	[ $rc -gt 0 ] && exec >&2
	cat <<EOF
usages:
$0 clear
$0 start
$0 status
$0 zero
$0 profile profileName
$0 modules
$0 enmod | dismod  moduleName [ ... ]
$0 [ -f | --file ConfFile ] [ -q | --quiet ] [ --network-interface iface ] [ --trusted-list '@ip [ ... ]' ] [ --trusted-icmp '@ip [ ... ]' ] ...
$0 [ -h | --help ]
EOF
	exit $rc
}


###############################################################################
# Options

# Settings passed in command line  >  Config file passed in command line  >  Default config file  >  Default options

# Default options
QUIET=false
NTWK_INTFCE=eth0
TRUSTED_LST=''
TRUSTED_ICMP=''

# Default config file > Default options
[ -r '/etc/default/iptables-init' ] && source '/etc/default/iptables-init'

TEMP="$(getopt --quiet --options hqf: --longoptions help,quiet,file:,network-interface:,trusted-list:,trusted-icmp: -- "$@")"
[ $? == 0 ] || usage 1

# Config file passed in command line > Default config file
eval set -- "$TEMP"
while true; do
	case "$1" in
		-f | --file)
			[ -r "$2" ] || { echo >&2 "$2 n'est pas lisible"; exit 2; }
			source "$2"
			shift 2
			;;
		--) shift ; break  ;;
		*)  shift          ;;
	esac
done

# Settings passed in command line > Config files
eval set -- "$TEMP"
while true; do
	case "$1" in
		-f | --file)                             shift 2 ;;
		--network-interface) NTWK_INTFCE="$2"  ; shift 2 ;;
		--trusted-list)      TRUSTED_LST="$2"  ; shift 2 ;;
		--trusted-icmp)      TRUSTED_ICMP="$2" ; shift 2 ;;
		-q | --quiet)        QUIET=true        ; shift   ;;
		--) shift ; break    ;;
		-h | --help) usage   ;;
		*)           usage 1 ;;
	esac
done


###############################################################################
# Args

case "$1" in
	clear|start|status|zero)
	              loadProfile "$1"     ;;
	profile)      loadProfile "$2"     ;;
	enmod|dismod) do_load_modules "$@" ;;
	modules)      do_list_modules      ;;
	*)            usage 1              ;;
esac

